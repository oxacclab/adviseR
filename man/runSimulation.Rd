% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulation.R
\name{runSimulation}
\alias{runSimulation}
\title{Run the simulation}
\usage{
runSimulation(
  n_agents = 6,
  n_decisions = 200,
  decision_flags = 3,
  bias_mean = 0,
  bias_sd = 1,
  sensitivity_sd = 1,
  trust_volatility_mean = 0.05,
  trust_volatility_sd = 0.01,
  bias_volatility_mean = 0.05,
  bias_volatility_sd = 0.01,
  confidence_slope_mean = 1,
  confidence_slope_sd = 0,
  weighted_sampling_mean = 0,
  weighted_sampling_sd = 0,
  starting_graph = NULL,
  random_seed = NA,
  random_seed_agents = NA,
  random_seed_simulation = NA,
  truth_fun = function(model, d) stats::rnorm(1, 0, model$parameters$truth_sd),
  truth_sd = 0.5,
  confidence_weighted = T,
  model = NA
)
}
\arguments{
\item{n_agents}{number of nodes in the network}

\item{n_decisions}{number of decisions to simulate}

\item{decision_flags}{numeric vector recycled to \code{length(n_decisions)}
containing boolean flags for which components of the simulation to run at
each decision point.
This vector can be used to e.g. run several decisions without updating
biases before allowing biases to update on the resulting trust network.
Flag values are 1 = trust update; 2 = bias update. Defaults to all.}

\item{bias_mean}{the mean for the agents' bias distribution (agents' biases
are drawn from normal distributions with mean +/- biasMean). Capped to
between 0 and 1, and represents the prior probability that the answer is 1.}

\item{bias_sd}{standard deviation for the bias distribution}

\item{sensitivity_sd}{standard deviation for distribution of agents'
sensitivity (mean is 1)}

\item{trust_volatility_mean}{the mean volatility of agents' trust}

\item{trust_volatility_sd}{standard deviation}

\item{bias_volatility_mean}{the mean volatility of agents' biases (move this
proportion towards the final decision value from current bias at each step)}

\item{bias_volatility_sd}{standard deviation}

\item{confidence_slope_mean}{the mean of the distribution from which agents
take their slopes for the sigmoid function mapping continuous evidence to
a probability of a categorical decision. \code{\link{abs}} is used to
avoid negative slopes.}

\item{confidence_slope_sd}{standard deviation}

\item{weighted_sampling_mean}{a non-zero value means agents choose who to
seek advice from according to how likely they are to trust the advice. The
weights are raised to the power of this value (so values > 1 make source
selection more pronounced than advice weighting, and values < 1 make source
selection less pronounced than advice weighting). Negative values will make
agents actively seek out those they do not trust for advice.}

\item{weighted_sampling_sd}{standard deviation}

\item{starting_graph}{single number, vector, or n_agents-by-n_agents matrix
of starting trust weights between agents. Coerced to numeric}

\item{random_seed}{the random seed to start the simulation with. If set, this
is used to generate the random seeds for agent construction and simulation
(unless those seeds are explicitly specified). This means output is
reproducible even if only this seed is set.}

\item{random_seed_agents}{random seed for agent construction}

\item{random_seed_simulation}{random seed for simulation}

\item{truth_fun}{function taking the simulation and decision number as
arguments and returning the true state of the world as a single number}

\item{truth_sd}{standard deviation of the truth function that the agents use
to calculate the probability of values given their biases.}

\item{confidence_weighted}{whether agents use their own confidence in initial
decisions to weigh their updating of trust in other agents. If F, agents
simply examine whether other agents agree (although this produces a cliff
whereby slight agreement and slight disagreement produce results as
different as extreme agreement and extreme disagreement).}

\item{model}{if present as a data frame output similar to that produced by
\code{\link{makeAgents}}, this model is used instead of being generated
automatically. If this is specified, the other model parameters giving
means and SDs for agent properties are for reference only, and the
properties which describe the model (e.g. n_agents) should match the
values extracted from this data frame.}
}
\value{
a list with \itemize{
\item{"times"}{Timestamps associated with simulation stages.}
\item{"parameters"}{Parameters input into the model}
\item{"model"}{A list of model content \itemize{
\item{"agents"}{A tbl with 1 row for each decision made by an agent.}
\item{"graphs"}{Annotated igraphs of trust strength between agents at each
generation.}
}}
}
}
\description{
Run the simulation
}
